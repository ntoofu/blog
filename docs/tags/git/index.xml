<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on ntoofu</title>
    <link>https://ntoofu.github.io/blog/tags/git/</link>
    <description>Recent content in Git on ntoofu</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2018 ntoofu</copyright>
    <lastBuildDate>Mon, 07 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://ntoofu.github.io/blog/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git-annex によるファイル管理を試した</title>
      <link>https://ntoofu.github.io/blog/post/git-annex/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ntoofu.github.io/blog/post/git-annex/</guid>
      <description>LWN.netの記事 で git-annex について知ったのでちょっと試してみた。
git-annex  LWN.netの記事もそうであるように, Gitで巨大なファイルを管理する際に git-lfsと並んで名前があがることがある 大きなファイルに限らず, ファイルの実体とバージョン管理を分離することができる ユースケースについては git-annex の説明を 読むのがわかり易い  例1: バックアップ・アーカイブ用途 例2: キャッシュ的な用途（クラウドストレージにあるデータをリムーバブルメディアに持ってきて 利用した後, 書き戻す）   柔軟な制御は出来る反面面倒な部分が多い  実体の置き場を複数に分散させられるので, 分散ストレージもどきっぽくできる  置き場にはクラウドストレージ等も利用可能   保持しておくべき実体のコピーの数とかも指定できる（バックアップ用途に便利） 実体が手元にあるかないか気にする必要があるが, 裏を返せば実体は必要なものだけ持つこともできる バージョン管理はgitの流儀に従って都度自分で行うか自動でやる仕組みを整える必要がある  cronジョブを仕込むとか     ホスティングサービスの対応は薄い  GitLabでは対応を打ち切られている   ちなみに haskell で書かれている模様  検証のモチベーション  デスクトップ, ラップトップ, モバイルのデータ共有に使えないか 以下のような運用を実現したい  デスクトップは常にアクセスできるNFS上のデータにアクセスするようにしておきたい NFS上のデータは適宜クラウドストレージ(Google Drive)にバックアップとしてデータをコピーしておきたい ラップトップは自宅ではNFSのデータを使いつつ, 外出先ではローカルのデータを使い, もしローカルに無い場合はクラウドストレージからデータを持ってくるようにする  ローカルの容量が小さいので, 必要なデータだけを持ってきたい   モバイル(iOS)から参照が必要なものは都度クラウドストレージから読み出しつつ, 撮った写真とかはクラウドストレージにアップロードする   gdriveなどでrsyncライクに同期を取ることはやっていたが, 気になる部分があってやめていた  同期忘れで並行して変更が発生してしまい不整合が出たら嫌 NFSを使っている関係で書き換え発生時に自動的に同期することが出来ない    試してわかったこと 公式にwalkthroughがあるので, 参考にして色々試しつつ動きを確認した。</description>
    </item>
    
  </channel>
</rss>
