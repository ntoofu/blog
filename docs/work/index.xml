<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Works on ntoofu</title>
    <link>https://ntoofu.github.io/blog/work/</link>
    <description>Recent content in Works on ntoofu</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2018 ntoofu</copyright>
    <lastBuildDate>Fri, 04 Jan 2019 00:18:02 +0900</lastBuildDate><atom:link href="https://ntoofu.github.io/blog/work/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自作キーボードPFKの設計の説明</title>
      <link>https://ntoofu.github.io/blog/work/original-keyboard-pfk/</link>
      <pubDate>Sat, 07 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ntoofu.github.io/blog/work/original-keyboard-pfk/</guid>
      <description>先日, 天下一キーボードわいわい会 Vol.3に参加し, 現在制作中のキーボードを展示してきました。 仕組みに興味を持って下さる方もいらしたので, ここで説明します。
展示では動くところを見せていなかったのもあり, まず動くところの動画です。
一応, Perfect Fluid Keyboard という名前で作っていたので, 以下PFKと呼びます。
コンセプト PFKは &amp;ldquo;キーをできるだけ自由に再配置できるようにする&amp;rdquo; というコンセプトのもとで設計しています。 このコンセプトは, 自分に最適なキーの配置を見つけるために, 柔軟に配置を変更できるのが良いのではないかと 思い至ったもので, PFK自体は末永く使うよりプロトタイピングのためのものという位置づけで作っています。
数年前, オープンソース化されている自作キーボードの設計をそのまま使ってPCBを発注して組み立てようと考えた時, どうせならキーの配置なども好きにカスタマイズしたいと思ったものの, どういう配置にするべきかが全くイメージできませんでした。 配置を変えて作り直そうとした場合, PCBマウント前提であれば基板を都度発注し直す必要があるし, プレートマウント前提であれば, プレートを作成し直す必要があります。 動作する状態にしようと思えば, それに加えてはんだ付けもしないといけません。 そこで, 最初から配置を変えられるように設計してみようと思ったというのが大体の経緯です。
ちなみに, 設計を始めた時は知らなかったのですが, これと同じようなコンセプトを満たすキーボードとして &amp;ldquo;Dumang&amp;rdquo; という製品を既に深圳のベンチャーが製造販売しているようです。 天下一キーボードに持って来て展示している方もいらっしゃいました。 （私の自作キーボードより自由度も高く, 「もうコレで良いのでは…？」という気持ちもありますが, それはそれ）
設計方針 上述のコンセプトを達成する上で, いくつかのアイディアを考えましたが, 必要になるパーツのコスト削減や, 配置変更の容易さなどを求めた結果, 次のような設計方針に至りました。
キースイッチごとにマイコンを設置し, I2C slaveとして動作させる キースイッチとマイコンのついたパーツ(以降, モジュールと呼ぶ)にピンヘッダをつけ, ピンソケットをたくさん並べた基板(以降, ベースボードと呼ぶ)上の好きな位置に接続する ベースボードはI2Cに必要な4線(Vcc, GND, SDA, SCL)からなるバスを張り巡らしており, モジュールはベースボードに挿されることでバスに接続される 別途用意したPro Microなどのコントローラーをベースボードと接続し, バス上のI2C masterとしてこのコントローラーを利用する コントローラーは随時I2Cを介してキーの押下状態をモジュールに問い合わせ(ポーリング), キー入力等のイベントを検出する イメージとしては, ブレッドボードが極めて近いと思います。 このようにすることで, ある程度自由な位置にキーを固定できると同時に, 電気的な接続もなされるため, 配置を変更する際にプレートまたはPCBの再作成も必要なければ, はんだ付けも不要となります。</description>
    </item>
    
  </channel>
</rss>
